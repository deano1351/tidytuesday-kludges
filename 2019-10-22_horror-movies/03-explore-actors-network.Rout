
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(tidyverse)
── Attaching packages ─────────────────────────────────────── tidyverse 1.2.1 ──
✔ ggplot2 3.2.1     ✔ purrr   0.3.3
✔ tibble  2.1.3     ✔ dplyr   0.8.3
✔ tidyr   1.0.0     ✔ stringr 1.4.0
✔ readr   1.3.1     ✔ forcats 0.4.0
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
> library(igraph)

Attaching package: ‘igraph’

The following object is masked from ‘package:forcats’:

    %>%

The following object is masked from ‘package:stringr’:

    %>%

The following objects are masked from ‘package:dplyr’:

    %>%, as_data_frame, groups, union

The following objects are masked from ‘package:purrr’:

    %>%, compose, simplify

The following objects are masked from ‘package:tidyr’:

    %>%, crossing

The following object is masked from ‘package:tibble’:

    as_data_frame

The following objects are masked from ‘package:stats’:

    decompose, spectrum

The following object is masked from ‘package:base’:

    union

> 
> load(
+   here::here("2019-10-22_horror-movies/actors-network.Rdata")
+ )
> 
> # centrality of the network
> 
> centr_degree(net)$centralization
[1] 0.001439259
> centr_clo(net)$centralization
[1] 4.801063e-05
> centr_betw(net)$centralization
[1] 0.08419203
> centr_eigen(net)$centralization
[1] 0.9978583
> 
> # > centr_degree(net)$centralization
> # [1] 0.001439259
> # > centr_clo(net)$centralization
> # [1] 4.801063e-05
> # > centr_betw(net)$centralization
> # [1] 0.08419203
> # > centr_eigen(net)$centralization
> # [1] 0.9978583
> 
> diameter(net)
[1] 96
> 
> # > diameter(net)
> # [1] 96
> 
> 
> cl <- components(net)
> cliq <- largest_cliques(net)
> 
> # calculate connections for each node
> V(net)$indeg <- degree(net)
> V(net)[V(net)$indeg == max(V(net)$indeg)]
+ 1/33881 vertex, named, from 753ffc5:
[1] Lloyd Kaufman
> 
> connected_actors <- tibble(
+   id = V(net)$id,
+   actor = V(net)$name,
+   connections = V(net)$indeg
+ ) %>%
+   arrange(desc(connections), actor)
> 
> # vertex betweenness
> V(net)$btwn <- betweenness(net)
> 
> btwn_actors <- tibble(
+   id = V(net)$id,
+   actor = V(net)$name,
+   btwn = V(net)$btwn
+ ) %>%
+   arrange(desc(btwn), actor)
> 
> E(net)$btwn <- edge_betweenness(net)
> 
> edge_btwns <- tibble(
+   edge = attr(E(net), "vnames"),
+   btwn = E(net)$btwn
+ ) %>%
+   rownames_to_column() %>%
+   arrange(
+     desc(btwn), edge
+   )
> 
> # closeness
> V(net)$clsns <- closeness(net)
> 
> clsns_actors <- tibble(
+   id = V(net)$id,
+   actor = V(net)$name,
+   clsns = V(net)$clsns
+ ) %>%
+   arrange(desc(clsns), actor)
> 
> # page rank
> 
> #V(net)$pgrank <- page.rank(net)
> #
> #pgrank_actors <- tibble(
> #  id = V(net)$id,
> #  actor = V(net)$name,
> #  pgrank = V(net)$pgrank
> #)
> 
> save(
+   cliq, cl, net, connected_actors, btwn_actors,
+   clsns_actors, edge_btwns, 
+   #pgrank_actors,
+   file = here::here("2019-10-22_horror-movies/actors-network-metrics.Rdata")
+ )
> 
> proc.time()
    user   system  elapsed 
1230.679    0.563 1239.538 
